version: "3.9"

services:
  postgres:
    image: postgis/postgis:15-3.3
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # Broker (AMQP)
      - "15672:15672"   # RabbitMQ UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always

  django:
    build:
      context: .
      dockerfile: Dockerfile
    # command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    working_dir: /code
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.local.rule=Host(`localhost`)"
      - "traefik.http.routers.local.entrypoints=websecure"
      - "traefik.http.services.local.loadbalancer.server.port=8000"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core worker -l info
    volumes:
      - .:/code
    working_dir: /code
    depends_on:
      django:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core --broker=amqp://guest:guest@rabbitmq:5672// flower
    ports:
      - "5555:5555"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always

  traefik:
    image: traefik:v2.11
    restart: no
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
      - ./traefik/tls.yml:/etc/traefik/dynamic/tls.yml:ro
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"

volumes:
  postgres_data:
  pgadmin_data:
